#include <stdio.h>
#include <stdlib.h>

#define MAX 100

int queue[MAX], front=-1, rear=-1;

void enqueue(int v){ queue[++rear]=v; if(front==-1) front=0; }
int dequeue(){ return queue[front++]; }
int isEmpty(){ return front>rear || front==-1; }

void BFS(int n, int adj[n][n], int start){
    int visited[n];
    for(int i=0;i<n;i++) visited[i]=0;

    enqueue(start);
    visited[start]=1;

    printf("BFS Traversal: ");
    while(!isEmpty()){
        int v=dequeue();
        printf("%d ",v);
        for(int i=0;i<n;i++){
            if(adj[v][i]==1 && !visited[i]){
                enqueue(i);
                visited[i]=1;
            }
        }
    }
    printf("\n");
}

int main(){
    int n;
    printf("Enter number of vertices: ");
    scanf("%d",&n);

    int adj[n][n];
    printf("Enter adjacency matrix (%dx%d):\n",n,n);
    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            scanf("%d",&adj[i][j]);

    int start;
    printf("Enter starting vertex (0 to %d): ", n-1);
    scanf("%d",&start);

    BFS(n, adj, start);

    return 0;
}
